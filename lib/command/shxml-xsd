#!/bin/bash
# BEGIN-INCLUDE LICENSE-header
# END-INCLUDE
if [[ -z "$SHXMLSHARE" ]];then
    echo "!! \$SHXMLSHARE not set. Run as '$(echo "$0"|sed -e 's,.*/,,' -e 's,-, ,')' !!"
    exit 142
fi
source "$SHXMLSHARE/lib/common.bash"

SHXML_BACKENDS_XSD=("xmlstarlet" "xmllint")
SYNOPSIS="Validate XML against XSD"

#man: ## USAGE
#man:
#man:     shxml xsd [options] <xsd> <input-file...>
#man:
#help: Usage: shxml xsd [opts] <xsd> <input-file...>
usage() {
    echo "$SHXMLBINARY xsd [opts] <xsd> <input-file...>

    $SYNOPSIS

    Options:

        --backend <BACKEND>   Use specific backend <BACKEND>
        --list-backends       List available backends
"
}

#man: ## OPTIONS
#man:
#help: Options:
#help:
while [[ "$1" = -?* ]];do
    case "$1" in
        #help:--synopsis:Show the synopsis of this command
        --synopsis) echo "$SYNOPSIS"; exit ;;
        --backend) BACKEND="$2"; shift ;;
        --list-backends)
            _shxml_backend_check_installed "${SHXML_BACKENDS_XSD[@]}"
            exit ;;
    esac
    shift
done
if [[ -z "$1" ]];then
    usage;
    exit;
fi

## ## ARGUMENTS

##
## * <xsd> - the XSD to validate with
##
XSD="$1"
if [[ ! -r "$XSD" ]];then
    shlog -l error -x 2 "Cannot read XSD script '$XSD'"
fi
shift

## * [input-file...] - input files or a single dash for stdin
##
declare -a INPUT_FILES
_args_input_files_or_stdin "$@"
INPUT_FILES=("${_ARGS_INPUT_FILES[@]}")

if [[ -z "$BACKEND" ]];then
    _shxml_backend_determine "$SHXML_BACKEND_XSD" "${SHXML_BACKENDS_XSD[@]}"
fi
shlog -l trace "XSD BACKEND: '$BACKEND'"
shlog -l trace "XSD: '$XSD'"
shlog -l trace "INPUT_FILES: '${INPUT_FILES[*]}'"
case "$BACKEND" in
    xmlstarlet)
        for input_file in "${INPUT_FILES[@]}";do
            shxml-backend "$BACKEND" -- \
                "validate" \
                "-s" "$XSD" \
                "$input_file"
        done
        ;;
    xmllint)
        for input_file in "${INPUT_FILES[@]}";do
            shxml-backend "$BACKEND" -- \
                "--noout" \
                "--schema" "$XSD" \
                "$input_file"
        done
        ;;
esac

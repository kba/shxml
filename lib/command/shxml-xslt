#!/bin/bash
# BEGIN-INCLUDE LICENSE-header
# END-INCLUDE
if [[ -z "$SHXMLSHARE" ]];then
    echo "!! \$SHXMLSHARE not set. Run as '$(echo "$0"|sed -e 's,.*/,,' -e 's,-, ,')' !!"
    exit 142
fi
source "$SHXMLSHARE/lib/common.bash"

SHXML_BACKENDS_XSLT=("saxon" "xsltproc" "xalan-cpp" "xalan-j" "xmlstarlet")
SYNOPSIS="Transform XML with XSLT"

declare -A SHXML_XSLT_PARAMS

usage() {
    echo "shxml xslt [opts] <xslt> <input-file...>

    $SYNOPSIS

    Options:

        -p --param NAME VALUE Set parameter NAME to VALUE
        --backend <BACKEND>   Use specific backend <BACKEND>
        --list-backends       List available backends
"
}

## ## OPTIONS
##
while [[ "$1" = -?* ]];do
    case "$1" in
        #help:--synopsis:Show the synopsis of this command
        --synopsis) echo "$SYNOPSIS"; exit ;;
        -p|--param) SHXML_XSLT_PARAMS[$2]="$3"; shift; shift ;;
        --backend) BACKEND="$2"; shift ;;
        --list-backends)
            _shxml_backend_check_installed "${SHXML_BACKENDS_XSLT[@]}"
            exit ;;
    esac
    shift
done
[[ -z "$1" ]] && { usage; exit; }

## ## ARGUMENTS

##
## * <xslt> - the xslt script to use
##
XSLT="$1"
if [[ ! -r "$XSLT" ]];then
    shlog -l error -x 2 "Cannot read XSLT script '$XSLT'"
fi
shift

## * [input-file...] - input files or a single dash for stdin
##
declare -a INPUT_FILES
_args_input_files_or_stdin "$@"
INPUT_FILES=("${_ARGS_INPUT_FILES[@]}")

if [[ -z "$BACKEND" ]];then
    _shxml_backend_determine "$SHXML_BACKEND_XSLT" "${SHXML_BACKENDS_XSLT[@]}"
fi
shlog -l trace -d BACKEND
shlog -l trace -d XSLT
shlog -l trace -d INPUT_FILES
case "$BACKEND" in
    saxon)
        typeset -a SAXON_OPTS SAXON_ARGS
        for k in "${!SHXML_XSLT_PARAMS[@]}";do
            SAXON_ARGS+=("$k=${SHXML_XSLT_PARAMS[$k]}")
        done
        for input_file in "${INPUT_FILES[@]}";do
            $SHXMLBINARY backend "$BACKEND" -- "Transform" \
                "${SAXON_OPTS[@]}" \
                -versionmsg:off \
                -xsl:"$XSLT" \
                -s:"$input_file" \
                "${SAXON_ARGS[@]}"
        done
        ;;
    xalan-j)
        for input_file in "${INPUT_FILES[@]}";do
            _shxml_backend "$BACKEND" -- \
                -xsl "$XSLT" \
                -in "$input_file"
        done
        ;;
    xalan-cpp)
        for input_file in "${INPUT_FILES[@]}";do
            $SHXMLBINARY backend "$BACKEND" -- \
                -xsl "$XSLT" \
                -in "$input_file"
        done
        ;;
    xsltproc)
        declare -a XSLTPROC_OPTS
        for k in "${!SHXML_XSLT_PARAMS[@]}";do
            XSLTPROC_OPTS+=("--stringparam" "$k" "${SHXML_XSLT_PARAMS[$k]}")
        done
        for input_file in "${INPUT_FILES[@]}";do
            shxml-backend "$BACKEND" -- \
                "${XSLTPROC_OPTS[@]}" \
                "$XSLT" \
                "$input_file"
        done
        ;;
    xmlstarlet)
        for input_file in "${INPUT_FILES[@]}";do
            shxml-backend "$BACKEND" -- \
                "transform" \
                "$XSLT" \
                "$input_file"
        done
        ;;
esac
